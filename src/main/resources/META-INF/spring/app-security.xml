<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                    http://www.springframework.org/schema/security 
                    http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<http pattern="/css/**" security="none" />
	<http pattern="/js/**" security="none" />

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/welcome*" access="hasRole('ROLE_USER')" />

		<form-login login-page="/login" default-target-url="/welcome"
			authentication-failure-url="/loginfailed" />
		<logout logout-success-url="/logout" invalidate-session="true"
			delete-cookies="true" />
	</http>

	<authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="admin" password="adminpassword" authorities="ROLE_USER, ROLE_ADMIN" />
				<user name="user" password="userpassword" authorities="ROLE_USER" />
			</user-service>
		</authentication-provider>

		<authentication-provider user-service-ref="dbUserDetailsService">
			<password-encoder ref="passwordEncoder" />
		</authentication-provider>
	</authentication-manager>

	<!-- Use a Md5 encoder since the user's passwords are stored as Md5 in the 
		database -->
	<beans:bean
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"
		id="passwordEncoder" />

	<!-- A custom service where Spring will retrieve users and their corresponding 
		access levels -->
	<beans:bean id="dbUserDetailsService" class="com.youdoc.service.DbUserDetailsService" />

</beans:beans>